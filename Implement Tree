#include<bits/stdc++.h>

using namespace std;

class TreeNode{
    public:
        int val;
        TreeNode* left,*right;

    TreeNode(int val){
        this->val = val;
        this->left = this->right = NULL;
    }
};


void levelOrderTraversal(TreeNode* root){
    if(root==NULL) return ;

    queue<TreeNode*> q;
    vector<vector<int>> ans;

    q.push(root);

    while(!q.empty()){
        int size = q.size();
        vector<int> temp;
        for(int i=0;i<size;i++){
            TreeNode* node = q.front();
            temp.push_back(node->val);
            q.pop();
            if(node->left) q.push(node->left);
            if(node->right) q.push(node->right);
        }
        ans.push_back(temp);
    }

    for(auto it:ans){
        for(int i=0;i<it.size();i++) cout<<it[i]<<" ";
        cout<<endl;
    }
}




int main(){
    TreeNode* root = new TreeNode(5);
    root->left =  new TreeNode(6);
    root->right = new TreeNode(7);
    root->left->left = new TreeNode(8);
    root->left->right = new TreeNode(9);

    levelOrderTraversal(root);
    return 0;
}
